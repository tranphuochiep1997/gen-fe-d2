import { Component, EventEmitter, Input, Output } from "@angular/core";
import { CommonModule } from "@angular/common";
import { NgZorroAntdModule } from "@${workspace}/share/services";
import { FormGroup, ReactiveFormsModule } from "@angular/forms";
import { InputComponent, TextAreaComponent } from "@qtht-fe/share/ui";
${constantVariableImport}
@Component({
  selector: "${featureGroup}-ui-${feature}-modal-update-item",
  standalone: true,
  imports: [CommonModule, NgZorroAntdModule, ReactiveFormsModule, InputComponent, TextAreaComponent],
  templateUrl: "./${feature}-modal-update-item.component.html",
  styleUrls: ["./${feature}-modal-update-item.component.scss"],
})
export class ModalUpdateItemComponent {
  constructor() { }
  @Input() form: FormGroup;
  @Input() isVisible: boolean = false;
  @Output() onSubmit = new EventEmitter();
  @Output() onCancel = new EventEmitter();
${constantVariablePropertiesSet}
  handleModalOk(): void {
    if (this.form.valid) {
      this.onSubmit.emit(this.form.value);
    } else {
      Object.values(this.form.controls).forEach(control => {
        if (control.invalid) {
          control.markAsDirty();
          control.updateValueAndValidity({ onlySelf: true });
        }
      });
    }
  }

  handleModalCancel(): void {
    this.onCancel.emit();
  }
}
